{"version":3,"sources":["App.js","web-build/register-service-worker.js"],"names":["App","React","useState","current","setCurrent","bus","setBus","tech","setTech","gen","setGen","ent","setEnt","health","setHealth","spt","setSpt","sci","setSci","country","setCountry","category","setCategory","setData","isLoaded","setisLoaded","dimensions","Dimensions","get","activeDrawer","setActiveDrawer","styles","StyleSheet","create","container","flex","backgroundColor","padding","load","alignItems","justifyContent","surface","flexDirection","elevation","borderWidth","borderColor","borderRadius","margin","headline","color","fontSize","fontFamily","summary","marginTop","read","drawerItem","drawerItemActive","navBar","drawerItemFooter","listHeader","paddingBottom","fontWeight","alignSelf","listHeaderM","CustomDrawerContent","props","activeTintColor","focused","labelStyle","label","onPress","changeNews","changeCountry","Linking","topic","c","useEffect","a","async","console","log","fetch","headers","then","response","json","result","error","Drawer","createDrawerNavigator","useFonts","Poppins_400Regular","PlayfairDisplay_400Regular","OpenSans_400Regular","Navigator","drawerType","width","drawerContent","drawerContentOptions","contentContainerStyle","activeBackgroundColor","drawerStyle","Screen","name","component","navigation","style","marginLeft","openDrawer","size","data","renderItem","item","underlayColor","url","numColumns","keyExtractor","index","toString","showsHorizontalScrollIndicator","ListHeaderComponent","replace","letter","toUpperCase","trim","navigator","window","addEventListener","serviceWorker","register","scope","info","catch"],"mappings":"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","file":"static/js/app.14307e61.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, View, FlatList, Dimensions, TouchableHighlight, ActivityIndicator } from 'react-native';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { Surface, Text, Headline, Paragraph, Divider } from 'react-native-paper';\nimport { NavigationContainer} from '@react-navigation/native';\nimport { createDrawerNavigator,\n          DrawerContentScrollView,\n          DrawerItemList,\n          DrawerItem  } from '@react-navigation/drawer';\nimport * as Linking from 'expo-linking';\nimport { \n  useFonts,\n  PlayfairDisplay_400Regular,\n} from '@expo-google-fonts/playfair-display';\nimport { \n  Poppins_400Regular,\n} from '@expo-google-fonts/poppins';\nimport { \n  OpenSans_300Light,\n  OpenSans_300Light_Italic,\n  OpenSans_400Regular,\n  OpenSans_400Regular_Italic,\n  OpenSans_600SemiBold,\n  OpenSans_600SemiBold_Italic,\n  OpenSans_700Bold,\n  OpenSans_700Bold_Italic,\n  OpenSans_800ExtraBold,\n  OpenSans_800ExtraBold_Italic \n} from '@expo-google-fonts/open-sans'\nimport { Ionicons } from '@expo/vector-icons';\n\n\n\n\n\n\nexport default function App() {\n  const [current,setCurrent] = React.useState([]);\n  const [bus,setBus] = React.useState({});\n  const [tech,setTech] = React.useState({});\n  const [gen,setGen] = React.useState({});\n  const [ent,setEnt] = React.useState({});\n  const [health,setHealth] = React.useState({});\n  const [spt,setSpt] = React.useState({});\n  const [sci,setSci] = React.useState({});\n  const [country, setCountry] = React.useState('us');\n  const [category, setCategory] = React.useState('general');\n  const [data, setData] = React.useState({});\n  const [isLoaded,setisLoaded] = React.useState(false);\n  const dimensions =  Dimensions.get('window');\n  const [activeDrawer, setActiveDrawer] = React.useState([true,false,false,false,false,false,false])\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#f8f9fa',\n      padding: 10,\n    },\n    load: {\n      flex: 1,\n      padding: 20,                         \n      alignItems: 'center',\n      justifyContent: 'center',\n    },  \n    surface: {\n      flex: 1,\n      flexDirection: 'column',\n      padding: 20,                         \n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      elevation: 0,\n      backgroundColor: '#fff',\n      borderWidth: 0.1,\n      borderColor: '#eeeeee',\n      borderRadius: 1,\n      margin: 10,\n    },  \n    headline: {\n      color: '#000',\n      fontSize: 23,\n      fontFamily: 'PlayfairDisplay_400Regular',\n    },\n    summary: {\n      color: '#000',\n      fontSize: 14  ,\n      marginTop: 10,\n      fontFamily: 'OpenSans_400Regular',\n    },\n    read: {\n      color: 'rgb(255, 51, 102)',\n      fontSize: 15,\n      fontFamily: 'OpenSans_400Regular',\n    },\n    drawerItem: {\n      color: '#FFF',\n      fontFamily: 'OpenSans_400Regular',\n      fontSize: '1.25em'\n    },\n    drawerItemActive: {\n      color: '#aaa',\n      fontFamily: 'OpenSans_400Regular',\n      fontSize: '1.25em'\n    },\n    navBar: {\n      flex:1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n      backgroundColor: '#f8f9fa',\n    },\n    drawerItemFooter: {\n      color: '#FFF',\n      fontFamily: 'OpenSans_400Regular',\n      fontSize: '0.8em'\n    },\n    listHeader: {\n      padding: 10,\n      paddingBottom: 20,\n      color: '#000',\n      fontSize: '3em',\n      fontFamily: 'PlayfairDisplay_400Regular',\n      fontWeight: 'bold',\n      alignSelf: 'center',\n    },\n    listHeaderM: {\n      padding: 10,\n      paddingBottom: 20,\n      color: '#000',\n      fontSize: '2em',\n      fontFamily: 'PlayfairDisplay_400Regular',\n      fontWeight: 'bold',\n      alignSelf: 'center',\n    }\n  });\n\n  const sentenceCase = (str) => { return str.replace(/[a-z]/i, function (letter) { return letter.toUpperCase(); }).trim(); }\n\n\n  function CustomDrawerContent(props) {\n    return (\n      <DrawerContentScrollView {...props}>\n        <View></View>\n        <View> \n          <DrawerItemList {...props}/>\n        </View> \n        <Divider/>\n        <View></View>\n        <View>\n          <DrawerItem activeTintColor='#000' focused={activeDrawer[0]} labelStyle={[activeDrawer[0]? styles.drawerItemActive : styles.drawerItem]} label=\"General\" onPress={() => changeNews('general')}/>\n          <DrawerItem activeTintColor='#000' focused={activeDrawer[1]} labelStyle={[activeDrawer[1]? styles.drawerItemActive : styles.drawerItem]} label=\"Technology\" onPress={() => changeNews('technology')}/>\n          <DrawerItem activeTintColor='#000' focused={activeDrawer[2]} labelStyle={[activeDrawer[2]? styles.drawerItemActive : styles.drawerItem]} label=\"Business\" onPress={() => changeNews('business')}/>\n          <DrawerItem activeTintColor='#000' focused={activeDrawer[3]} labelStyle={[activeDrawer[3]? styles.drawerItemActive : styles.drawerItem]} label=\"Sports\" onPress={() => changeNews('sports')}/>\n          <DrawerItem activeTintColor='#000' focused={activeDrawer[4]} labelStyle={[activeDrawer[4]? styles.drawerItemActive : styles.drawerItem]} label=\"Entertainment\" onPress={() => changeNews('entertainment')}/>\n          <DrawerItem activeTintColor='#000' focused={activeDrawer[5]} labelStyle={[activeDrawer[5]? styles.drawerItemActive : styles.drawerItem]} label=\"Science\" onPress={() => changeNews('science')}/>\n          <DrawerItem activeTintColor='#000' focused={activeDrawer[6]} labelStyle={[activeDrawer[6]? styles.drawerItemActive : styles.drawerItem]} label=\"Health\" onPress={() => changeNews('health')}/>\n          <Divider/>\n          <DrawerItem activeTintColor='#000' focused={0} labelStyle={styles.drawerItemFooter} label={(country === 'us')?\"Change Country: US\":\"Change Country: IN\"} onPress={() => changeCountry()}/>\n          <DrawerItem activeTintColor='#000' focused={0} labelStyle={styles.drawerItemFooter} label=\"About\" onPress={() => Linking.openURL('https://yashmundra.com')}/>\n        </View> \n      </DrawerContentScrollView>\n    );\n  }\n\n  const changeNews = (topic,c=country) => {\n    setCategory(topic);\n    switch (topic) {\n      case 'general':\n        setCurrent(gen[c]);\n        setActiveDrawer([1,0,0,0,0,0,0])\n        break;\n      case 'technology':\n        setCurrent(tech[c]);\n        setActiveDrawer([0,1,0,0,0,0,0])\n        break;\n      case 'business':\n        setCurrent(bus[c]);\n        setActiveDrawer([0,0,1,0,0,0,0])\n        break;\n      case 'sports':\n        setCurrent(spt[c]);\n        setActiveDrawer([0,0,0,1,0,0,0])\n        break;\n      case 'entertainment':\n        setCurrent(ent[c]);\n        setActiveDrawer([0,0,0,0,1,0,0])\n        break;\n      case 'science':\n        setCurrent(sci[c]);\n        setActiveDrawer([0,0,0,0,0,1,0])\n        break; \n      case 'health':\n        setCurrent(health[c]);\n        setActiveDrawer([0,0,0,0,0,0,1])\n        break;                    \n    }\n  }\n\n  const toTitleCase = (str) => {\n      return str.replace(\n          /\\w\\S*/g,\n          function(txt) {\n              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          }\n      );\n  }\n\n  const changeCountry = () => {\n    if(country === 'us'){\n      setCountry('in');\n      changeNews(category,'in');\n    }else{\n      setCountry('us');\n      changeNews(category,'us');\n    }\n  }\n\n  function News({navigation}){\n\n    const renderItem = ({ item }) => {  \n      return (\n        <Surface style={styles.surface}>\n          <Text style={styles.headline}>{item.headline}</Text>\n          <Divider/>\n          <Paragraph style={styles.summary}>{item.summary}</Paragraph>\n          <Divider/>\n          <TouchableHighlight underlayColor='#fff'onPress={()=> Linking.openURL(item.url)}>\n          <Text style={styles.read}>Read More</Text>\n          </TouchableHighlight>\n        </Surface>\n      );\n    };\n\n    const renderHeader = () => {\n      return <Headline style={dimensions.width >= 768 ? styles.listHeader : styles.listHeaderM}>{sentenceCase(category)} News</Headline>\n    }\n  \n    return (\n      <View style={styles.container}>\n          {!(dimensions.width >= 768) && \n          <View style={styles.navBar}>\n            <TouchableHighlight style={{flex:1, marginLeft: 20,}}onPress={(() => {navigation.openDrawer();console.log(country)})}>\n              <Ionicons name=\"md-menu\" size={40} color=\"black\" />\n            </TouchableHighlight>\n          </View>\n          }\n          <View style={{flex:15}}>\n            <FlatList \n            data={current}\n            renderItem={renderItem}\n            numColumns={ dimensions.width >= 768 ? 2 : 1}\n            keyExtractor={(item, index) => index.toString()}\n            showsHorizontalScrollIndicator={false}\n            ListHeaderComponent={renderHeader}\n            />\n          </View>\n      </View>\n    );\n  }\n\n  const fetchData = async() => {\n    console.log('Run');\n    await fetch('https://ghbjfa4gvl.execute-api.ap-south-1.amazonaws.com/Test/news-gen-api',{\n      headers: {\n        'x-api-key':'4S9VL5b4kv8sllRNcqNLl544it4ZizcG1KF4Fox8'\n      },\n    }).then(\n      response => response.json()\n    ).then(\n      (result) => {\n        setisLoaded(true);\n        setData(result['Items'][0]);\n        setGen(result['Items'][0]['general']);\n        setBus(result['Items'][0]['business']);\n        setTech(result['Items'][0]['technology']);\n        setEnt(result['Items'][0]['entertainment']);\n        setHealth(result['Items'][0]['health']);\n        setSci(result['Items'][0]['science']);\n        setSpt(result['Items'][0]['sports']);\n        setCurrent(result['Items'][0][category][country])\n      },\n      (error) => {\n        setisLoaded(true);\n      }\n    )\n  }\n\n  React.useEffect(()=>{\n    fetchData();\n  },[]);\n\n  const Drawer = createDrawerNavigator();\n\n  let [fontsLoaded] = useFonts({\n    Poppins_400Regular,\n    PlayfairDisplay_400Regular,\n    OpenSans_400Regular,\n  });\n\n  function Loading () {\n    return (\n      <View style={styles.load}>\n      <ActivityIndicator color='rgb(255, 51, 102)'size=\"large\" />\n      </View>\n    )\n  }\n\n  if (!fontsLoaded || !isLoaded) {\n    return <Loading/>;\n  } else {\n  return (\n  <PaperProvider> \n    <NavigationContainer>\n        <Drawer.Navigator drawerType={ dimensions.width >= 768 ? 'permanent' : 'slide'} \n          drawerContent={props => <CustomDrawerContent {...props} />}\n          drawerContentOptions={{\n            contentContainerStyle:{\n              flex:1, flexDirection: 'column', justifyContent: 'space-around',\n            },\n            activeTintColor: '#FFF',\n            activeBackgroundColor: '#000',\n            labelStyle:{\n              fontSize: '3em',\n              fontFamily:'PlayfairDisplay_400Regular'\n            }\n          }}\n          drawerStyle={{\n            backgroundColor: '#000',\n          }}\n          >\n          <Drawer.Screen name=\"Daily Brief\" component={News} />  \n        </Drawer.Navigator>      \n    </NavigationContainer>\n  </PaperProvider>\n  );\n}\n}\n\n\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/news/expo-service-worker.js', { scope: '/news/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}